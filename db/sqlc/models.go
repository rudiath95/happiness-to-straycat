// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type FavFood struct {
	ID   int64          `json:"id"`
	Name sql.NullString `json:"name"`
}

type Immunization struct {
	ID   int64          `json:"id"`
	Name sql.NullString `json:"name"`
}

type Payment struct {
	ID            int64     `json:"id"`
	PaymentMethod string    `json:"payment_method"`
	PaymentStatus string    `json:"payment_status"`
	StartedAt     time.Time `json:"started_at"`
	EndAt         time.Time `json:"end_at"`
	TransactionID int64     `json:"transaction_id"`
}

type Pet struct {
	ID            int64          `json:"id"`
	Name          string         `json:"name"`
	Age           int32          `json:"age"`
	Gender        interface{}    `json:"gender"`
	Images        sql.NullString `json:"images"`
	Movies        sql.NullString `json:"movies"`
	Contraception sql.NullBool   `json:"contraception"`
	Condition     sql.NullString `json:"condition"`
	OwnerID       int64          `json:"owner_id"`
	TransactionID int64          `json:"transaction_id"`
	CreatedAt     time.Time      `json:"created_at"`
}

type PetFavFood struct {
	ID     int64 `json:"id"`
	PetID  int64 `json:"pet_id"`
	FoodID int64 `json:"food_id"`
}

type PetImmunization struct {
	ID             int64 `json:"id"`
	PetID          int64 `json:"pet_id"`
	ImmunizationID int64 `json:"immunization_id"`
}

type PetTag struct {
	ID    int64 `json:"id"`
	PetID int64 `json:"pet_id"`
	TagID int64 `json:"tag_id"`
}

type Tag struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type Transaction struct {
	ID                int64          `json:"id"`
	TransactionStatus sql.NullString `json:"transaction_status"`
	PaymentType       sql.NullString `json:"payment_type"`
	PetID             sql.NullString `json:"pet_id"`
}

type TransactionDetail struct {
	ID            int64          `json:"id"`
	Name          sql.NullString `json:"name"`
	Price         sql.NullInt32  `json:"price"`
	TransactionID int64          `json:"transaction_id"`
}

type User struct {
	ID        uuid.UUID   `json:"id"`
	Email     string      `json:"email"`
	Verified  bool        `json:"verified"`
	Password  string      `json:"password"`
	Role      interface{} `json:"role"`
	CreatedAt time.Time   `json:"created_at"`
	UpdatedAt time.Time   `json:"updated_at"`
}

type UserDetail struct {
	ID      int64       `json:"id"`
	UserID  uuid.UUID   `json:"user_id"`
	Name    string      `json:"name"`
	Gender  interface{} `json:"gender"`
	Age     int32       `json:"age"`
	Address string      `json:"address"`
	Phone   int32       `json:"phone"`
}
